apply plugin: "eclipse"

def final JAVA_PLUGIN_PROJECTS = [project(":core")]

def final C_PLUGIN_PROJECTS = [project(":native")]
def final ASPECTJ_PROJECTS = [project(":core")]
def final GROOVY_PROJECTS = [project(":dsl")]

// Plugins
JAVA_PLUGIN_PROJECTS.each{
	it.apply plugin: "java"
	it.apply plugin: "eclipse"
}

C_PLUGIN_PROJECTS.each{
	it.apply plugin: "cpp-lib"
	it.apply plugin: "eclipse"
}

ASPECTJ_PROJECTS.each{
	it.configurations{
		ajc
		aspectPath
		inpath
	}
}

GROOVY_PROJECTS.each{
	it.apply plugin: "groovy"
	it.apply plugin: "eclipse"
}

// Property Evaluation
subprojects{
	beforeEvaluate{ proj ->
		proj.ext.isAspectJProject = false
		proj.ext.isCProject = false
		proj.ext.isGroovyProject = false
		proj.ext.usesJavaPlugin = false
		proj.ext.usesJunit = false
		proj.ext.usesMockito = false
	}

	afterEvaluate{ proj ->
		if(proj.usesJunit || proj.usesMockito || proj.isAspectJProject || proj.isGroovyProject){
			proj.repositories{ mavenCentral() }
		}

		if(proj.isAspectJProject){
			proj.dependencies{
				ajc "org.aspectj:aspectjrt:1.7.2", "org.aspectj:aspectjtools:1.7.2"
				compile configurations.ajc
			}
			proj.eclipse{
				classpath{
					plusConfigurations += proj.configurations.ajc
				}
				project{
					natures += [
						"org.eclipse.ajdt.ui.ajnature"
					]

					buildCommand "org.eclipse.ajdt.core.ajbuilder"
				}
			}
		}

		if(proj.isCProject){
			proj.eclipse{
				project{
					natures += [
						"org.eclipse.cdt.core.cnature",
						"org.eclipse.cdt.managedbuilder.core.managedBuildNature",
						"org.eclipse.cdt.managedbuilder.core.ScannerConfigNature"
					]

					buildCommand "org.eclipse.cdt.managedbuilder.core.genmakebuilder"
					buildCommand "org.eclipse.cdt.managedbuilder.core.ScannerConfigBuilder"
				}
			}
		}

		if(proj.isGroovyProject){
			proj.dependencies{ compile "org.codehaus.groovy:groovy-all:2.1.2"}
			proj.eclipse{
				project{
					natures +=[
						"org.eclipse.jdt.groovy.core.groovyNature"
					]
				}
			}
		}

		if(proj.usesJunit){
			proj.dependencies{ testCompile "junit:junit:4.11" }
		}

		if(proj.usesMockito){
			proj.dependencies{ testCompile "org.mockito:mockito-all:1.9.5" }
		}

		if(proj.usesJavaPlugin){
			proj.tasks.test.forkEvery = 0
			proj.convention.plugins.java.sourceCompatibility = 1.7
			proj.convention.plugins.java.targetCompatibility = 1.7
			proj.eclipse{
				project{
					natures "org.eclipse.jdt.core.javanature", "net.sf.eclipsecs.core.CheckstyleNature"

					buildCommand "net.sf.eclipsecs.core.CheckstyleBuilder"
					buildCommand "org.eclipse.jdt.core.javabuilder"
				}
			}
		}
	}
}

allprojects{proj->
	afterEvaluate{
		proj.eclipse.project.natures "org.springsource.ide.eclipse.gradle.core.nature"
	}
}

