apply plugin:'java'
apply plugin:'eclipse'

repositories{ mavenCentral() }

configurations{
	ajc
	aspectpath
	ajInpath
	integrationTestCompile.extendsFrom testCompile
}

dependencies{
	ajc "org.aspectj:aspectjtools:1.7.2"
	compile "org.aspectj:aspectjrt:1.7.2"
	testCompile "junit:junit:4.11", "org.mockito:mockito-core:1.9.5"
}

eclipse{
	project{

		file.beforeMerged{ project ->
			project.natures.clear()
		}

		name = "nsend"

		natures "org.eclipse.ajdt.ui.ajnature"
		natures "org.eclipse.jdt.core.javanature"
		natures "org.springsource.ide.eclipse.gradle.core.nature"
		natures "net.sf.eclipsecs.core.CheckstyleNature"
		natures "org.eclipse.cdt.core.cnature"

		buildCommand "org.eclipse.cdt.managedbuilder.core.genmakebuilder"
		buildCommand "org.eclipse.cdt.managedbuilder.core.ScannerConfigBuilder"
		buildCommand "org.eclipse.ajdt.core.ajbuilder"
		buildCommand "net.sf.eclipsecs.core.CheckstyleBuilder"
	}
}
sourceSets{
	integrationTest{
		java{
			srcDirs "src/integration-test/java"
			compileClasspath += main.output
		}
	}
}
sourceSets.main.java{ srcDirs "src/main/aspectj" }
sourceSets.main.java{ srcDirs "src/main/c" }


sourceCompatibility = 1.7
targetCompatibility = 1.7

jar{
	manifest{ attributes "Implementation-Title": "nsend" }
}

task compileJava(overwrite: true, description: 'Compiles AspectJ Source', type: Ajc) {
	sourceSet = sourceSets.main
	aspectPath = configurations.aspectpath
}

task compileTestJava(overwrite: true, description: 'Compiles AspectJ Test Source', type: Ajc) {
	dependsOn classes
	sourceSet = sourceSets.test
	aspectPath = files(configurations.aspectpath)
}

task compileIntegrationTestJava(overwrite: true, description: "Compile Integration Tests", type:Ajc){
	dependsOn classes
	sourceSet = sourceSets.integrationTest
	aspectPath = files(configurations.aspectpath);
}

integrationTestClasses.dependsOn("compileIntegrationTestJava")
classes.dependsOn("compileJava")
build.dependsOn("classes")
build.dependsOn("integrationTestClasses")

class Ajc extends DefaultTask {
	@Input
	SourceSet sourceSet

	@Input
	FileCollection aspectPath

	@TaskAction
	def compile() {
		println "Running ajc ..."
		ant.taskdef(
				resource: "org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties",
				classpath: project.configurations.ajc.asPath)
		ant.iajc(
				classpath: sourceSet.compileClasspath.asPath,
				destDir: sourceSet.output.classesDir.absolutePath,
				source: project.convention.plugins.java.sourceCompatibility,
				target: project.convention.plugins.java.targetCompatibility,
				aspectPath: aspectPath.asPath,
				sourceRootCopyFilter: '**/*.java',
				fork: true,
				forkclasspath: project.configurations.ajc.asPath,
				showWeaveInfo: true,
				verbose: true) {

					sourceroots {
						sourceSet.java.srcDirs.each {
							pathelement(location: it.absolutePath)
						}
					}
				}
	}
}